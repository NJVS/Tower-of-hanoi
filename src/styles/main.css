/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul[class],
ol[class] {
  padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

/* Set core body defaults */
body {
  width: 100%;
  height: auto;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  position: relative;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations and transitions for people that prefer not to see them */
header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: min(550px, 85%);
  margin-bottom: 4rem;
  padding: 0.5rem 1.25rem;
  border: 2px solid hsl(0deg, 0%, 75%);
  border-radius: 5px;
}
header h1 {
  line-height: 1;
  white-space: pre-line;
}
header .moves {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100px;
  aspect-ratio: 1/1;
  background-color: hsl(0deg, 0%, 90%);
  border-radius: 5px;
  text-align: center;
}
header .moves p {
  color: hsl(0deg, 0%, 50%);
  font-size: 0.6875rem;
  text-transform: uppercase;
  font-weight: 700;
  line-height: 1;
}
header .moves h2 {
  color: hsl(0deg, 0%, 10%);
  font-size: 3rem;
  line-height: 1;
}
header > .settings {
  position: absolute;
  bottom: -2px;
  left: calc(100% + 0.375rem);
  z-index: 99;
}
header > .settings button.trigger {
  --c-fill: hsl(0, 0%, 60%);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.375rem;
  background-color: transparent;
  border: 2px solid var(--c-fill);
  border-radius: 5px;
  transition: all 0.4s ease;
  cursor: pointer;
}
header > .settings button.trigger > svg {
  width: 15px;
  height: 15px;
  fill: var(--c-fill);
  transition: all 0.4s ease;
  pointer-events: none;
}
header > .settings button.trigger:hover {
  --c-fill: hsl(0, 0%, 90%);
}
header > .settings button.trigger:hover svg {
  rotate: 90deg;
}
header > .settings button.trigger.active {
  --c-fill: hsl(0, 0%, 90%);
}
header > .settings button.trigger.active ~ .opt {
  opacity: 1;
  visibility: visible;
}
header > .settings .opt {
  position: absolute;
  top: calc(100% + 0.375rem);
  right: 0;
  width: max-content;
  padding: 1.25rem 1rem;
  background: radial-gradient(ellipse at top, hsl(214deg, 47%, 23%), hsl(237deg, 49%, 15%));
  border: 2px solid hsl(0deg, 0%, 90%);
  border-radius: 5px;
  opacity: 0;
  visibility: hidden;
}
header > .settings .opt .opt_group {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}
header > .settings .opt .opt_group:last-child {
  gap: 0.25rem;
  margin-bottom: 0;
}
header > .settings .opt .opt_group:last-child > button {
  flex-grow: 1;
  padding: 0.25rem 0;
  border-radius: 5px;
  font-size: 0.875rem;
  cursor: pointer;
}
header > .settings .opt .opt_group:last-child > button:first-child {
  border: none;
  background-color: hsl(0deg, 0%, 90%);
  color: hsl(0deg, 0%, 10%);
}
header > .settings .opt .opt_group:last-child > button:last-child {
  background-color: transparent;
  border: 2px solid hsl(0deg, 0%, 90%);
  color: hsl(0deg, 0%, 90%);
}
header > .settings .opt .opt_group label {
  margin-right: 0.5rem;
}
header > .settings .opt input[type=checkbox] {
  all: unset;
  position: relative;
  width: 2.5rem;
  height: 1.1rem;
  border: 2px solid hsl(0deg, 0%, 75%);
  border-radius: 50vh;
  cursor: pointer;
}
header > .settings .opt input[type=checkbox]::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 5%;
  translate: 0 -50%;
  height: 0.875rem;
  aspect-ratio: 1/1;
  border-radius: 50%;
  background-color: hsl(0deg, 0%, 60%);
  transition: all 0.4s ease;
}
header > .settings .opt input[type=checkbox]:checked::after {
  left: 90%;
  translate: -100% -50%;
  background-color: hsl(0deg, 0%, 90%);
}
header > .settings .opt .input-group {
  display: flex;
  align-items: center;
}
header > .settings .opt .input-group > * {
  background: transparent;
  border: 2px solid hsl(0deg, 0%, 90%);
}
header > .settings .opt .input-group > *:is(input) {
  border-left: none;
  border-right: none;
  color: hsl(0deg, 0%, 90%);
  text-align: center;
  appearance: none;
  -moz-appearance: none;
}
header > .settings .opt .input-group > *:is(input)::-webkit-inner-spin-button, header > .settings .opt .input-group > *:is(input)::-webkit-outer-spin-button {
  appearance: none;
  margin: 0;
}
header > .settings .opt .input-group > *:is(button) {
  cursor: pointer;
}
header > .settings .opt .input-group > *:is(button) svg {
  width: 0.675rem;
  pointer-events: none;
  fill: hsl(0deg, 0%, 75%);
  pointer-events: none;
}
header > .settings .opt .input-group > *:is(button):hover svg {
  fill: hsl(0deg, 0%, 90%);
}
header > .settings .opt .input-group > *:first-child {
  border-radius: 5px 0 0 5px;
}
header > .settings .opt .input-group > *:last-child {
  border-radius: 0 5px 5px 0;
}

.game-board {
  flex-grow: 1;
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
  width: 100%;
  height: 100%;
}
.game-board .tower {
  position: relative;
  display: flex;
  width: 250px;
}
.game-board .tower > *:not(.tower-inner) {
  pointer-events: none;
}
.game-board .tower .base {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 50px;
  background-color: hsl(0deg, 0%, 75%);
  border-radius: 100%;
  box-shadow: 0 3px 0 0 hsl(0deg, 0%, 50%), 0 6px 0 0 hsl(0deg, 0%, 50%), 0 9px 0 0 hsl(0deg, 0%, 50%), 0 12px 0 0 hsl(0deg, 0%, 50%), 0 15px 0 0 hsl(0deg, 0%, 50%), 0 18px 0 0 hsl(0deg, 0%, 50%), 0 21px 10px 5px hsl(0deg, 0%, 0%);
}
.game-board .tower .pole {
  position: absolute;
  bottom: 25px;
  left: 50%;
  translate: -50%;
  width: 20px;
  height: 250px;
  background-color: hsl(0deg, 0%, 75%);
  box-shadow: 0 2px 8px 0 hsla(0deg, 0%, 25%, 0.5);
}
.game-board .tower .pole::before {
  content: "";
  position: absolute;
  top: 0;
  translate: 0 -50%;
  width: 100%;
  height: 6px;
  background-color: hsl(0deg, 0%, 65%);
  border-radius: 100%;
}
.game-board .tower .pole::after {
  content: "";
  position: absolute;
  bottom: 0;
  translate: 0 50%;
  width: 100%;
  height: 6px;
  background-color: hsl(0deg, 0%, 75%);
  border-radius: 100%;
}
.game-board .tower-inner {
  position: relative;
  display: flex;
  align-items: center;
  flex-direction: column-reverse;
  width: 100%;
  z-index: 10;
  cursor: pointer;
}
.game-board .tower-inner li {
  position: absolute;
  height: 40px;
  border-radius: 100%;
  pointer-events: none;
  --flr-position: 20px;
  --flr-width-decrement: 20px;
}
.game-board .tower-inner li::before {
  content: "";
  position: absolute;
  bottom: 25px;
  left: 50%;
  translate: -50%;
  width: 20px;
  height: 16px;
  background-color: hsl(0deg, 0%, 75%);
  box-shadow: 0 8px 10px -3px hsla(0deg, 0%, 25%, 0.5);
}
.game-board .tower-inner li::after {
  content: "";
  position: absolute;
  bottom: 25px;
  left: 50%;
  translate: -50% 50%;
  width: 20px;
  height: 8px;
  background-color: hsl(0deg, 0%, 75%);
  border-radius: 100%;
}
.game-board .tower-inner li:nth-child(1) {
  bottom: calc(var(--flr-position) * 1);
}
.game-board .tower-inner li:nth-child(2) {
  bottom: calc(var(--flr-position) * 2);
}
.game-board .tower-inner li:nth-child(3) {
  bottom: calc(var(--flr-position) * 3);
}
.game-board .tower-inner li:nth-child(4) {
  bottom: calc(var(--flr-position) * 4);
}
.game-board .tower-inner li:nth-child(5) {
  bottom: calc(var(--flr-position) * 5);
}
.game-board .tower-inner li:nth-child(6) {
  bottom: calc(var(--flr-position) * 6);
}
.game-board .tower-inner li:nth-child(7) {
  bottom: calc(var(--flr-position) * 7);
}
.game-board .tower-inner li:nth-child(8) {
  bottom: calc(var(--flr-position) * 8);
}
.game-board .tower-inner li[data-floor="1"] {
  z-index: calc(10 + 1);
  width: calc(250px - var(--flr-width-decrement) * 1);
  background-color: hsl(0deg, 60%, 50%);
  box-shadow: 0 3px 0 0 #8f2424, 0 6px 0 0 #8f2424, 0 9px 0 0 #8f2424, 0 12px 0 0 #8f2424, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="2"] {
  z-index: calc(10 + 2);
  width: calc(250px - var(--flr-width-decrement) * 2);
  background-color: hsl(44deg, 83%, 56%);
  box-shadow: 0 3px 0 0 #bf9112, 0 6px 0 0 #bf9112, 0 9px 0 0 #bf9112, 0 12px 0 0 #bf9112, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="3"] {
  z-index: calc(10 + 3);
  width: calc(250px - var(--flr-width-decrement) * 3);
  background-color: hsl(96deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #59b41d, 0 6px 0 0 #59b41d, 0 9px 0 0 #59b41d, 0 12px 0 0 #59b41d, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="4"] {
  z-index: calc(10 + 4);
  width: calc(250px - var(--flr-width-decrement) * 4);
  background-color: hsl(162deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #1db487, 0 6px 0 0 #1db487, 0 9px 0 0 #1db487, 0 12px 0 0 #1db487, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="5"] {
  z-index: calc(10 + 5);
  width: calc(250px - var(--flr-width-decrement) * 5);
  background-color: hsl(219deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #1d52b4, 0 6px 0 0 #1d52b4, 0 9px 0 0 #1d52b4, 0 12px 0 0 #1d52b4, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="6"] {
  z-index: calc(10 + 6);
  width: calc(250px - var(--flr-width-decrement) * 6);
  background-color: hsl(273deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #701db4, 0 6px 0 0 #701db4, 0 9px 0 0 #701db4, 0 12px 0 0 #701db4, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="7"] {
  z-index: calc(10 + 7);
  width: calc(250px - var(--flr-width-decrement) * 7);
  background-color: hsl(315deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #b41d8e, 0 6px 0 0 #b41d8e, 0 9px 0 0 #b41d8e, 0 12px 0 0 #b41d8e, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li[data-floor="8"] {
  z-index: calc(10 + 8);
  width: calc(250px - var(--flr-width-decrement) * 8);
  background-color: hsl(24deg, 72%, 56%);
  box-shadow: 0 3px 0 0 #b4591d, 0 6px 0 0 #b4591d, 0 9px 0 0 #b4591d, 0 12px 0 0 #b4591d, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
}
.game-board .tower-inner li.picked {
  animation: pickedFloor 1s infinite;
}

@keyframes pickedFloor {
  from {
    background-color: hsl(0deg, 0%, 25%);
    box-shadow: 0 3px 0 0 #1a1a1a, 0 6px 0 0 #1a1a1a, 0 9px 0 0 #1a1a1a, 0 12px 0 0 #1a1a1a, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
  }
  to {
    background-color: hsl(0deg, 0%, 75%);
    box-shadow: 0 3px 0 0 #999999, 0 6px 0 0 #999999, 0 9px 0 0 #999999, 0 12px 0 0 #999999, 0 15px 5px 0 hsla(0deg, 0%, 0%, 0.75);
  }
}
body {
  display: grid;
  place-items: center;
  width: 100%;
  height: 100vh;
  background: radial-gradient(ellipse at top, hsl(214deg, 47%, 23%), hsl(237deg, 49%, 15%));
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: min(1000px, 85%);
  height: min(600px, 85%);
  color: hsl(0deg, 0%, 90%);
  font-family: "Barlow Semi Condensed", sans-serif;
}

/*# sourceMappingURL=main.css.map */
